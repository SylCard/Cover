{"version":3,"sources":["cover.png","inventive.jpg","Emphatic.jpg","passion.jpg","Header.tsx","Playlist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","Playlist","src","width","height","frameBorder","allowTransparency","allow","style","background","borderRadius","border","color","padding","margin","boxShadow","App","Grid","container","spacing","item","md","cover","inventive","musical","passion","href","Button","variant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3086d57e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.4e369292.png\";","module.exports = __webpack_public_path__ + \"static/media/inventive.bc3c5f34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Emphatic.af450edc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/passion.0ba71c6c.jpg\";","import React from 'react';\n\nexport default function Header() {\n  return (\n    <header className=\"App-header\">\n      <h1> Sylvester Cardorelle </h1>\n      <p>\n        Software Engineer â€“ Content Operations Candidate\n      </p>\n    </header>\n  );\n}\n","import * as React from \"react\";\n\n\nexport default function Playlist() {\n  return (\n    <div className=\"playlist\">\n      <iframe src=\"https://open.spotify.com/embed/playlist/23PN4W2qqbNOMQgcwjN2Cm\"\n              width=\"250\"\n              height=\"370\"\n              frameBorder=\"0\"\n              allowTransparency={true}\n              allow=\"encrypted-media\">\n      </iframe>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nimport logo from './logo.svg';\nimport cover from './cover.png'\nimport inventive from './inventive.jpg'\nimport musical from './Emphatic.jpg'\nimport passion from './passion.jpg'\nimport './App.css';\nimport Header from './Header';\nimport Playlist from './Playlist' ;\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\n// We can use inline-style\nconst style = {\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  borderRadius: 3,\n  border: 0,\n  color: 'white',\n  height: 48,\n  padding: '0 30px',\n  margin: '30px',\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid container spacing={4}>\n      <Grid item md={3}>\n      </Grid>\n       <Grid item md={6}>\n         <Header/>\n       </Grid>\n       <Grid item md={3}>\n       </Grid>\n       <Grid item md={12} className=\"Music\">\n        <div className=\"Box\">\n          <img className=\"App-logo\" src={cover}/>\n        </div>\n        <div className=\"Box\">\n          <Playlist />\n        </div>\n        <p >\n         Music is a feeling.\n         <br/>\n         It's the feeling of peace in your headphones on the daily commute.\n         <br/>\n         It's the feeling of excitement on a friend's party, when you take over the auxillary cable.\n         <br/>\n         It's the feeling of nostalgia, when you hear an old song from your childhood.\n\n          <br/>\n         I can vividly remember those times that music has shaped my life experience.\n         <br/>\n         Music is limitless when it comes to changing peoples lives and to have an impact on that experience\n         <br/> is why I'm applying to be a Software\n         Engineer in the Content Platform Band.\n        </p>\n       </Grid>\n         <Grid item md={3}>\n         </Grid>\n         <Grid item md={6} >\n           <h1>Why Me?</h1>\n         </Grid>\n         <Grid item md={3}>\n         </Grid>\n       <Grid item md={3}>\n       </Grid>\n       <Grid item md={2}>\n         <img className=\"About-logo\" src={inventive}/>\n       </Grid>\n       <Grid item md={2}>\n         <img className=\"About-logo\" src={musical}/>\n       </Grid>\n       <Grid item md={2}>\n         <img className=\"About-logo\" src={passion}/>\n       </Grid>\n       <Grid item md={3}>\n       </Grid>\n       <Grid item md={3}>\n       </Grid>\n       <Grid item md={2}>\n       <p className=\"Bio\">\n        My recent project <a href=\"https://sylcard.github.io/InMyFeels-/\">In my Feels,</a>\n\n        <br/>\n        predicts your mood based on spotify data. More details <a href=\"https://towardsdatascience.com/predicting-my-mood-using-my-spotify-data-2e898add122a\">\n        here.\n        </a>\n        </p>\n       </Grid>\n       <Grid item md={2}>\n        <p className=\"Bio\">\n        I have been producing <a href=\"https://soundcloud.com/silverdeblaine/samba-time\">music</a> for the last 3 years\n        and I play guitar in regular bands with my friends!\n       </p>\n       </Grid>\n       <Grid item md={2}>\n\n       <p className=\"Bio\">\n        In 2018, I set up the charity <a href=\"https://www.instagram.com/bluefortheocean/\" >Blue For the Ocean </a> to raise awareness of plastic pollution.\n        I engaged with over 10,000 people by collaborating with charities to support #bluefortheocean.\n        </p>\n         <p>\n         </p>\n\n       </Grid>\n       <Grid item md={3}>\n       </Grid>\n       <Grid item md={12} className=\"Music\">\n         <h1>Let's talk music.</h1>\n\n         <Button variant=\"outlined\" href=\"mailto:sylvester@cardorelle.io?subject=Lets%20talk%20music\" style={style}>Contact</Button>\n\n         <Button variant=\"outlined\" href=\"https://drive.google.com/file/d/1EEXCFfE3u_G6u2JVaj6RhwKE1m8L0xHi/view?usp=sharing\" style={style} >Resume</Button>\n       </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}